{"version":3,"sources":["Content/Content.tsx","FormIp/FormIp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Content","props","error","className","isLoaded","ip","data","map","item","version","city","region","region_code","country_code","country_name","country_capital","country_tld","continent_code","String","in_eu","postal","latitude","longitude","timezone","utc_offset","country_calling_code","currency","currency_name","languages","country_area","country_population","asn","org","FormIp","useState","tempIp","setTempIp","type","placeholder","name","value","onChange","e","currentTarget","onClick","handleIp","App","setData","setIp","setError","setIsLoaded","useEffect","arr","fetch","then","response","json","push","console","log","message","newIp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA0HeA,EArHC,SAACC,GACb,OAAIA,EAAMC,MAEF,sBAAKC,UAAU,QAAf,yEAA0EF,EAAMC,SAE5ED,EAAMG,SAENH,EAAMI,GAKd,qBAAKF,UAAU,oBAAf,SACKF,EAAMK,KAAKC,KAAI,SAACC,GAAD,OACZ,qBAAkBL,UAAU,0BAA5B,UACI,+BACI,wBAAQA,UAAU,gCAAlB,oBACA,qCAAO,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKH,WAE7D,+BACI,wBAAQF,UAAU,gCAAlB,oBACA,yCAAW,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKC,gBAEjE,+BACI,wBAAQN,UAAU,gCAAlB,oBACA,uCAAS,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKE,aAE/D,+BACI,wBAAQP,UAAU,gCAAlB,oBACA,yCAAW,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKG,eAEjE,+BACI,wBAAQR,UAAU,gCAAlB,oBACA,8CAAgB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKI,oBAEtE,+BACI,wBAAQT,UAAU,gCAAlB,oBACA,+CAAiB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKK,qBAEvE,+BACI,wBAAQV,UAAU,gCAAlB,oBACA,+CAAiB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKM,qBAEvE,+BACI,wBAAQX,UAAU,gCAAlB,oBACA,kDAAoB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKO,wBAE1E,+BACI,wBAAQZ,UAAU,gCAAlB,oBACA,8CAAgB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKQ,oBAEtE,+BACI,wBAAQb,UAAU,gCAAlB,oBACA,iDAAmB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKS,uBAEzE,+BACI,wBAAQd,UAAU,iCAAlB,gBACA,wCAAU,sBAAMA,UAAU,6BAAhB,SAA8Ce,OAAOV,EAAKW,eAExE,+BACI,wBAAQhB,UAAU,gCAAlB,oBACA,yCAAW,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKY,eAEjE,+BACI,wBAAQjB,UAAU,gCAAlB,eACA,2CAAa,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKa,iBAEnE,+BACI,wBAAQlB,UAAU,gCAAlB,eACA,4CAAc,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKc,kBAEpE,+BACI,wBAAQnB,UAAU,gCAAlB,oBACA,2CAAa,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKe,iBAEnE,+BACI,wBAAQpB,UAAU,gCAAlB,oBACA,6CAAe,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKgB,mBAErE,+BACI,wBAAQrB,UAAU,gCAAlB,oBACA,uDAAyB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKiB,6BAE/E,+BACI,wBAAQtB,UAAU,gCAAlB,oBACA,2CAAa,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKkB,iBAEnE,+BACI,wBAAQvB,UAAU,gCAAlB,oBACA,gDAAkB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKmB,sBAExE,+BACI,wBAAQxB,UAAU,gCAAlB,oBACA,4CAAc,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKoB,kBAEpE,+BACI,wBAAQzB,UAAU,gCAAlB,eACA,+CAAiB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKqB,qBAEvE,+BACI,wBAAQ1B,UAAU,gCAAlB,eACA,qDAAuB,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKsB,2BAE7E,+BACI,wBAAQ3B,UAAU,gCAAlB,oBACA,sCAAQ,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKuB,YAE9D,+BACI,wBAAQ5B,UAAU,gCAAlB,oBACA,sCAAQ,sBAAMA,UAAU,4BAAhB,SAA6CK,EAAKwB,cA/FzDxB,EAAKH,SANf,qBAAKF,UAAU,UAAf,2EAFA,qBAAKA,UAAU,SAAf,yBCeA8B,G,YAxBA,SAAChC,GACZ,MAA4BiC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,OACI,sBAAKjC,UAAU,YAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,mBAAf,eACA,mBAAGA,UAAU,mBAAb,2BAEJ,uBAAMA,UAAU,aAAhB,UACI,uBACIkC,KAAK,OACLlC,UAAU,wBACVmC,YAAY,KACZC,KAAK,UACLC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAUM,EAAEC,cAAcH,UAC/C,wBAAQH,KAAK,SAASlC,UAAU,sBACxByC,QAAS,kBAAM3C,EAAM4C,SAASV,IADtC,4BC4BDW,MAvCf,WACI,MAAwBZ,mBAA8B,IAAtD,mBAAO5B,EAAP,KAAayC,EAAb,KACA,EAAoBb,mBAAiB,IAArC,mBAAO7B,EAAP,KAAW2C,EAAX,KACA,EAA0Bd,mBAAwB,MAAlD,mBAAOhC,EAAP,KAAc+C,EAAd,KACA,EAAgCf,oBAAkB,GAAlD,mBAAO9B,EAAP,KAAiB8C,EAAjB,KAoBA,OAhBAC,qBAAU,WACN,IAAMC,EAA2B,GAEjCC,MAAM,8BAAyBhD,GAAzB,UACDiD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACEN,GAAY,GACZE,EAAIK,KAAKD,GACTT,EAAQK,MAEZ,SAAClD,GACGgD,GAAY,GACZQ,QAAQC,IAAIzD,EAAM0D,SAClBX,EAAS/C,EAAM0D,cAE5B,CAACvD,IAEA,qBAAKF,UAAU,gBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,EAAD,CACI0C,SAvBC,SAACgB,GACdb,EAAMa,MAuBE,cAAC,EAAD,CACIvD,KAAMA,EACNJ,MAAOA,EACPE,SAAUA,EACVC,GAAIA,UC1BTyD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d491ff69.chunk.js","sourcesContent":["import React from 'react';\r\nimport './content.scss';\r\nimport {IpGeolocationData} from \"../interfaces\";\r\nimport \"@fontsource/roboto-mono\";\r\n\r\nconst Content = (props: any) => {\r\n    if (props.error) {\r\n        return  (\r\n            <div className=\"error\">Something went wrong üòû. Please try again. Error: {props.error}</div>\r\n        )\r\n    } else if (!props.isLoaded) {\r\n        return <div className=\"loader\">Loading...</div>;\r\n    } else if (!props.ip) {\r\n        return <div className=\"message\">Enter IP and press ‚ÄúSearch‚Äù to get geolocation data</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-container\">\r\n            {props.data.map((item:IpGeolocationData)=>(\r\n                <ul key={item.ip} className=\"content-container__list\">\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>ip: <span className=\"content-container__string\">{item.ip}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>version:<span className=\"content-container__string\">{item.version}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>city: <span className=\"content-container__string\">{item.city}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>region: <span className=\"content-container__string\">{item.region}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>region_code: <span className=\"content-container__string\">{item.region_code}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>country_code: <span className=\"content-container__string\">{item.country_code}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>country_name: <span className=\"content-container__string\">{item.country_name}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>country_capital: <span className=\"content-container__string\">{item.country_capital}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>country_tld: <span className=\"content-container__string\">{item.country_tld}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>continent_code: <span className=\"content-container__string\">{item.continent_code}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-boolean\">tf</button>\r\n                        <p>in_eu: <span className=\"content-container__boolean\">{String(item.in_eu)}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>postal: <span className=\"content-container__string\">{item.postal}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-number\">#</button>\r\n                        <p>latitude: <span className=\"content-container__number\">{item.latitude}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-number\">#</button>\r\n                        <p>longitude: <span className=\"content-container__number\">{item.longitude}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>timezone: <span className=\"content-container__string\">{item.timezone}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>utc_offset: <span className=\"content-container__string\">{item.utc_offset}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>country_calling_code: <span className=\"content-container__string\">{item.country_calling_code}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>currency: <span className=\"content-container__string\">{item.currency}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>currency_name: <span className=\"content-container__string\">{item.currency_name}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>languages: <span className=\"content-container__string\">{item.languages}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-number\">#</button>\r\n                        <p>country_area: <span className=\"content-container__number\">{item.country_area}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-number\">#</button>\r\n                        <p>country_population: <span className=\"content-container__number\">{item.country_population}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>asn: <span className=\"content-container__string\">{item.asn}</span></p>\r\n                    </li>\r\n                    <li>\r\n                        <button className=\"content-container__btn-string\">‚Äú</button>\r\n                        <p>org: <span className=\"content-container__string\">{item.org}</span></p>\r\n                    </li>\r\n                </ul>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","import React, {useState} from 'react';\r\nimport './formIp.scss'\r\nconst FormIp = (props: any) => {\r\n    const [tempIp, setTempIp] = useState<string>('');\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container__form-title\">\r\n                <div className=\"container__image\"> </div>\r\n                <p className=\"container__title\">Find My IP</p>\r\n            </div>\r\n            <form className=\"form-items\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"container__form-input\"\r\n                    placeholder=\"IP\"\r\n                    name=\"comment\"\r\n                    value={tempIp}\r\n                    onChange={(e) => setTempIp(e.currentTarget.value)}/>\r\n                <button type=\"button\" className=\"container__form-btn\"\r\n                        onClick={() => props.handleIp(tempIp)}>Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default FormIp;\r\n\r\n","import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport {IpGeolocationData} from \"./interfaces\";\nimport Content from \"./Content/Content\";\nimport '@fontsource/roboto';\nimport FormIp from \"./FormIp/FormIp\";\n\nfunction App() {\n    const [data, setData] = useState<IpGeolocationData[]>([]);\n    const [ip, setIp] = useState<string>('');\n    const [error, setError] = useState<string | null>(null);\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\n    const handleIp = (newIp: string) => {\n        setIp(newIp)\n    }\n    useEffect(() => {\n        const arr: IpGeolocationData[] = [];\n        //eslint-disable-next-line\n        fetch(`https://ipapi.co/` + `${ip}` + `/json/`)\n            .then(response => response.json())\n            .then(json => {\n                    setIsLoaded(true)\n                    arr.push(json);\n                    setData(arr)\n                },\n                (error) => {\n                    setIsLoaded(true)\n                    console.log(error.message)\n                    setError(error.message);\n                })\n    }, [ip])\n    return (\n        <div className=\"app-container\">\n            <div className=\"app-container__body\">\n                <FormIp\n                    handleIp={handleIp}/>\n                <Content\n                    data={data}\n                    error={error}\n                    isLoaded={isLoaded}\n                    ip={ip}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}